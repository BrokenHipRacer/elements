
allprojects {
    group 'net.e6tech'
    version '1.0-SNAPSHOT'

    apply plugin: 'java'

    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
    }
}

dependencies {
    testCompile("org.junit.jupiter:junit-jupiter-api:5.0.0-M4")
    testCompile("org.junit.platform:junit-platform-launcher:1.0.0-M4")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.0.0-M4")
}

subprojects {

    group 'net.e6tech'
    version '2.1.28'

    apply plugin: 'groovy'
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'maven'
    apply plugin: 'signing'

    archivesBaseName = "elements-${project.name}"

    signing {
        sign configurations.archives
    }

    javadoc {
        source = sourceSets.main.allJava
        classpath = configurations.compile
    }

    task sourcesJar(type: Jar) {
        baseName "elements-${project.name}"
        classifier 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }

    publishing {
        publications {
            common(MavenPublication) {
                from components.java
                artifactId "elements-${project.name}"

                artifact sourcesJar
                artifact javadocJar
            }
        }
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name project.name
                    description "elements-${project.name}"
                    packaging 'jar'
                    // optionally artifactId can be defined here. description 'A application used as an example on how to set up pushing its components to the Central Repository.'
                    url 'http://github.com/futehkao/elements.git'

                    scm {
                        connection 'scm:git:https://github.com/futehkao/elements.git'
                        developerConnection 'scm:git:https://github.com/futehkao/elements.git'
                        url 'https://github.com/futehkao/elements.git'
                    }

                    licenses {
                        license {
                            name 'The Apache License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id 'futeh'
                            name 'Futeh Kao'
                            email 'futeh@episodesix.com'
                        }
                    }
                }
            }
        }
    }
}